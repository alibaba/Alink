<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>alink</artifactId>
        <groupId>com.alibaba.alink</groupId>
        <version>1.6.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>alink_core_flink-${alink.flink.major.version}_${alink.scala.major.version}</artifactId>
    <name>alink_core</name>

    <build>
        <plugins>
            <!-- Scala Compiler -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- build alink_open_python_runner.tar.gz -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>Make Python</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="main">
                                <mkdir dir="${project.build.directory}/tmp_py"/>
                                <copy todir="${project.build.directory}/tmp_py" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/python/python_runner" includes="**" />
                                </copy>
                                <tar destfile="${project.build.directory}/extra_resources/alink_open_python_runner.tar.gz"
                                     compression="gzip">
                                    <tarfileset dir="${project.build.directory}/tmp_py">
                                        <include name="*.py"/>
                                        <include name="**/*.py"/>
                                    </tarfileset>
                                    <tarfileset dir="${project.build.directory}/tmp_py"
                                                filemode="755">
                                        <include name="*.sh"/>
                                        <include name="**/*.sh"/>
                                    </tarfileset>
                                </tar>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- add alink_open_python_runner.tar.gz to resources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>Add_TO_RESOURCE</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/extra_resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_${alink.scala.major.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-scala_${alink.scala.major.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-api-java-bridge_${alink.scala.major.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-api-java</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-planner_${alink.scala.major.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-runtime-blink_${alink.scala.major.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-gelly_${alink.scala.major.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.common.lang3.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- scala dependencies -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- breeze dependency -->
        <dependency>
            <groupId>org.scalanlp</groupId>
            <artifactId>breeze_${alink.scala.major.version}</artifactId>
            <version>${breeze.version}</version>
            <exclusions>
                <!-- This is included as a compile-scoped dependency by jtransforms, which is
                     a dependency of breeze. -->
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Calcite-related dependency -->
        <dependency>
            <groupId>com.alibaba.alink</groupId>
            <artifactId>shaded_protobuf_java</artifactId>
            <version>3.6.1-0.6</version>
        </dependency>

        <!-- lazy-api dependency -->
        <dependency>
            <groupId>io.reactivex.rxjava3</groupId>
            <artifactId>rxjava</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.jpmml</groupId>
            <artifactId>pmml-model</artifactId>
            <version>1.4.15</version>
        </dependency>
        <dependency>
            <groupId>jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.13</version>
        </dependency>

        <!-- json dependency -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${alink.mvn.gson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-shaded-jackson</artifactId>
            <version>2.7.9-3.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>0.5.6</version>
        </dependency>

        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.10</version>
        </dependency>

        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>all</artifactId>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>net.sf.py4j</groupId>
            <artifactId>py4j</artifactId>
            <version>0.10.8.1</version>
        </dependency>

        <dependency>
            <groupId>org.tensorflow</groupId>
            <artifactId>ndarray</artifactId>
            <version>0.2.0</version>
        </dependency>

        <!-- flink-ai-extended-tf2 -->
        <dependency>
            <groupId>com.alibaba.alink</groupId>
            <artifactId>shaded_flink_ai_extended_tf2</artifactId>
            <version>0.3.0-SNAPSHOT-0.6</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.alibaba.alink</groupId>
            <artifactId>shaded_tensorflow_core_api</artifactId>
            <version>0.2.0-0.6</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>3.14.0</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.48</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba.alink</groupId>
            <artifactId>shaded_alink_metadata_def</artifactId>
            <version>3.21.1-0.6</version>
        </dependency>

        <!-- unit test dependency -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-test-utils_2.11</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba.alink</groupId>
            <artifactId>alink_test_utils-${alink.flink.major.version}_${alink.scala.major.version}</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.21.0</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
