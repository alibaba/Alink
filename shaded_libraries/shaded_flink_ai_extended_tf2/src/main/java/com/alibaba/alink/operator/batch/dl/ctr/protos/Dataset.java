// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: easy_rec/python/protos/dataset.proto

package com.alibaba.alink.operator.batch.dl.ctr.protos;

public final class Dataset {
  private Dataset() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DatasetConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protos.DatasetConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * mini batch size to use for training and evaluation.
     * </pre>
     *
     * <code>optional uint32 batch_size = 1 [default = 32];</code>
     */
    boolean hasBatchSize();
    /**
     * <pre>
     * mini batch size to use for training and evaluation.
     * </pre>
     *
     * <code>optional uint32 batch_size = 1 [default = 32];</code>
     */
    int getBatchSize();

    /**
     * <pre>
     * set auto_expand_input_fields to true to
     * auto_expand field[1-21] to field1, field2, ..., field21
     * </pre>
     *
     * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
     */
    boolean hasAutoExpandInputFields();
    /**
     * <pre>
     * set auto_expand_input_fields to true to
     * auto_expand field[1-21] to field1, field2, ..., field21
     * </pre>
     *
     * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
     */
    boolean getAutoExpandInputFields();

    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    java.util.List<java.lang.String>
        getLabelFieldsList();
    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    int getLabelFieldsCount();
    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    java.lang.String getLabelFields(int index);
    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    com.google.protobuf.ByteString
        getLabelFieldsBytes(int index);

    /**
     * <pre>
     * whether to shuffle data
     * </pre>
     *
     * <code>optional bool shuffle = 5 [default = true];</code>
     */
    boolean hasShuffle();
    /**
     * <pre>
     * whether to shuffle data
     * </pre>
     *
     * <code>optional bool shuffle = 5 [default = true];</code>
     */
    boolean getShuffle();

    /**
     * <pre>
     * shufffle buffer for better performance, even shuffle buffer is set,
     * it is suggested to do full data shuffle before training
     * especially when the performance of models is not good.
     * </pre>
     *
     * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
     */
    boolean hasShuffleBufferSize();
    /**
     * <pre>
     * shufffle buffer for better performance, even shuffle buffer is set,
     * it is suggested to do full data shuffle before training
     * especially when the performance of models is not good.
     * </pre>
     *
     * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
     */
    int getShuffleBufferSize();

    /**
     * <pre>
     * The number of times a data source is read. If set to zero, the data source
     * will be reused indefinitely.
     * </pre>
     *
     * <code>optional uint32 num_epochs = 6 [default = 0];</code>
     */
    boolean hasNumEpochs();
    /**
     * <pre>
     * The number of times a data source is read. If set to zero, the data source
     * will be reused indefinitely.
     * </pre>
     *
     * <code>optional uint32 num_epochs = 6 [default = 0];</code>
     */
    int getNumEpochs();

    /**
     * <pre>
     * Number of decoded records to prefetch before batching.
     * </pre>
     *
     * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
     */
    boolean hasPrefetchSize();
    /**
     * <pre>
     * Number of decoded records to prefetch before batching.
     * </pre>
     *
     * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
     */
    int getPrefetchSize();

    /**
     * <pre>
     * shard dataset to 1/num_workers in distribute mode
     * </pre>
     *
     * <code>optional bool shard = 8 [default = false];</code>
     */
    boolean hasShard();
    /**
     * <pre>
     * shard dataset to 1/num_workers in distribute mode
     * </pre>
     *
     * <code>optional bool shard = 8 [default = false];</code>
     */
    boolean getShard();

    /**
     * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
     */
    boolean hasInputType();
    /**
     * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
     */
    com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType getInputType();

    /**
     * <pre>
     * separator of column features, only used for CSVInput*
     * not used in OdpsInput*
     * binary separators are supported:
     *   CTRL+A could be set as '&#92;001'
     *   CTRL+B could be set as '&#92;002'
     *   CTRL+C could be set as '&#92;003'
     * for RTPInput and OdpsRTPInput it is usually set
     * to '&#92;002'
     * </pre>
     *
     * <code>optional string separator = 12 [default = ","];</code>
     */
    boolean hasSeparator();
    /**
     * <pre>
     * separator of column features, only used for CSVInput*
     * not used in OdpsInput*
     * binary separators are supported:
     *   CTRL+A could be set as '&#92;001'
     *   CTRL+B could be set as '&#92;002'
     *   CTRL+C could be set as '&#92;003'
     * for RTPInput and OdpsRTPInput it is usually set
     * to '&#92;002'
     * </pre>
     *
     * <code>optional string separator = 12 [default = ","];</code>
     */
    java.lang.String getSeparator();
    /**
     * <pre>
     * separator of column features, only used for CSVInput*
     * not used in OdpsInput*
     * binary separators are supported:
     *   CTRL+A could be set as '&#92;001'
     *   CTRL+B could be set as '&#92;002'
     *   CTRL+C could be set as '&#92;003'
     * for RTPInput and OdpsRTPInput it is usually set
     * to '&#92;002'
     * </pre>
     *
     * <code>optional string separator = 12 [default = ","];</code>
     */
    com.google.protobuf.ByteString
        getSeparatorBytes();

    /**
     * <pre>
     * parallel preproces of raw data, avoid using too small
     * or too large numbers(suggested be to small than
     * number of the cores)
     * </pre>
     *
     * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
     */
    boolean hasNumParallelCalls();
    /**
     * <pre>
     * parallel preproces of raw data, avoid using too small
     * or too large numbers(suggested be to small than
     * number of the cores)
     * </pre>
     *
     * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
     */
    int getNumParallelCalls();

    /**
     * <pre>
     * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
     * for RTPInput, selected_cols use indices as column names
     *  such as '1,2,4', where 1,2 are label columns, and
     *  4 is the feature column, column 0,3 are not used,
     * </pre>
     *
     * <code>optional string selected_cols = 14 [default = ""];</code>
     */
    boolean hasSelectedCols();
    /**
     * <pre>
     * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
     * for RTPInput, selected_cols use indices as column names
     *  such as '1,2,4', where 1,2 are label columns, and
     *  4 is the feature column, column 0,3 are not used,
     * </pre>
     *
     * <code>optional string selected_cols = 14 [default = ""];</code>
     */
    java.lang.String getSelectedCols();
    /**
     * <pre>
     * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
     * for RTPInput, selected_cols use indices as column names
     *  such as '1,2,4', where 1,2 are label columns, and
     *  4 is the feature column, column 0,3 are not used,
     * </pre>
     *
     * <code>optional string selected_cols = 14 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getSelectedColsBytes();

    /**
     * <pre>
     * selected col types, only used for OdpsInput/OdpsInputV2
     * to avoid error setting of data types
     * </pre>
     *
     * <code>optional string selected_col_types = 15 [default = ""];</code>
     */
    boolean hasSelectedColTypes();
    /**
     * <pre>
     * selected col types, only used for OdpsInput/OdpsInputV2
     * to avoid error setting of data types
     * </pre>
     *
     * <code>optional string selected_col_types = 15 [default = ""];</code>
     */
    java.lang.String getSelectedColTypes();
    /**
     * <pre>
     * selected col types, only used for OdpsInput/OdpsInputV2
     * to avoid error setting of data types
     * </pre>
     *
     * <code>optional string selected_col_types = 15 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getSelectedColTypesBytes();

    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    java.util.List<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field> 
        getInputFieldsList();
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field getInputFields(int index);
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    int getInputFieldsCount();
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    java.util.List<? extends com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder> 
        getInputFieldsOrBuilderList();
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder getInputFieldsOrBuilder(
        int index);

    /**
     * <pre>
     * for RTPInput only
     * </pre>
     *
     * <code>optional string rtp_separator = 17 [default = ";"];</code>
     */
    boolean hasRtpSeparator();
    /**
     * <pre>
     * for RTPInput only
     * </pre>
     *
     * <code>optional string rtp_separator = 17 [default = ";"];</code>
     */
    java.lang.String getRtpSeparator();
    /**
     * <pre>
     * for RTPInput only
     * </pre>
     *
     * <code>optional string rtp_separator = 17 [default = ";"];</code>
     */
    com.google.protobuf.ByteString
        getRtpSeparatorBytes();

    /**
     * <pre>
     * ignore some data errors
     * it is not suggested to set this parameter
     * </pre>
     *
     * <code>optional bool ignore_error = 18 [default = false];</code>
     */
    boolean hasIgnoreError();
    /**
     * <pre>
     * ignore some data errors
     * it is not suggested to set this parameter
     * </pre>
     *
     * <code>optional bool ignore_error = 18 [default = false];</code>
     */
    boolean getIgnoreError();
  }
  /**
   * Protobuf type {@code protos.DatasetConfig}
   */
  public  static final class DatasetConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protos.DatasetConfig)
      DatasetConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DatasetConfig.newBuilder() to construct.
    private DatasetConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DatasetConfig() {
      batchSize_ = 32;
      labelFields_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      shuffle_ = true;
      shuffleBufferSize_ = 32;
      prefetchSize_ = 512;
      inputType_ = 10;
      separator_ = ",";
      numParallelCalls_ = 8;
      selectedCols_ = "";
      selectedColTypes_ = "";
      inputFields_ = java.util.Collections.emptyList();
      rtpSeparator_ = ";";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DatasetConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DatasetConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              batchSize_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              autoExpandInputFields_ = input.readBool();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                labelFields_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              labelFields_.add(bs);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              shuffle_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              numEpochs_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              prefetchSize_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              shard_ = input.readBool();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType value = com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                inputType_ = rawValue;
              }
              break;
            }
            case 88: {
              bitField0_ |= 0x00000008;
              shuffleBufferSize_ = input.readInt32();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              separator_ = bs;
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              numParallelCalls_ = input.readUInt32();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              selectedCols_ = bs;
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              selectedColTypes_ = bs;
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                inputFields_ = new java.util.ArrayList<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field>();
                mutable_bitField0_ |= 0x00002000;
              }
              inputFields_.add(
                  input.readMessage(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              rtpSeparator_ = bs;
              break;
            }
            case 144: {
              bitField0_ |= 0x00002000;
              ignoreError_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          labelFields_ = labelFields_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00002000) != 0)) {
          inputFields_ = java.util.Collections.unmodifiableList(inputFields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.class, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code protos.DatasetConfig.FieldType}
     */
    public enum FieldType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INT32 = 0;</code>
       */
      INT32(0),
      /**
       * <code>INT64 = 1;</code>
       */
      INT64(1),
      /**
       * <code>STRING = 2;</code>
       */
      STRING(2),
      /**
       * <code>FLOAT = 4;</code>
       */
      FLOAT(4),
      /**
       * <code>DOUBLE = 5;</code>
       */
      DOUBLE(5),
      /**
       * <code>BOOL = 6;</code>
       */
      BOOL(6),
      ;

      /**
       * <code>INT32 = 0;</code>
       */
      public static final int INT32_VALUE = 0;
      /**
       * <code>INT64 = 1;</code>
       */
      public static final int INT64_VALUE = 1;
      /**
       * <code>STRING = 2;</code>
       */
      public static final int STRING_VALUE = 2;
      /**
       * <code>FLOAT = 4;</code>
       */
      public static final int FLOAT_VALUE = 4;
      /**
       * <code>DOUBLE = 5;</code>
       */
      public static final int DOUBLE_VALUE = 5;
      /**
       * <code>BOOL = 6;</code>
       */
      public static final int BOOL_VALUE = 6;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FieldType valueOf(int value) {
        return forNumber(value);
      }

      public static FieldType forNumber(int value) {
        switch (value) {
          case 0: return INT32;
          case 1: return INT64;
          case 2: return STRING;
          case 4: return FLOAT;
          case 5: return DOUBLE;
          case 6: return BOOL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FieldType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FieldType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FieldType>() {
              public FieldType findValueByNumber(int number) {
                return FieldType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final FieldType[] VALUES = values();

      public static FieldType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FieldType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protos.DatasetConfig.FieldType)
    }

    /**
     * Protobuf enum {@code protos.DatasetConfig.InputType}
     */
    public enum InputType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * csv format input, could be used in local or hdfs
       * </pre>
       *
       * <code>CSVInput = 10;</code>
       */
      CSVInput(10),
      /**
       * <pre>
       * &#64;Depreciated
       * </pre>
       *
       * <code>CSVInputV2 = 11;</code>
       */
      CSVInputV2(11),
      /**
       * <pre>
       * extended csv format, allow quote in fields
       * </pre>
       *
       * <code>CSVInputEx = 12;</code>
       */
      CSVInputEx(12),
      /**
       * <pre>
       * &#64;Depreciated, has memory leak problem
       * </pre>
       *
       * <code>OdpsInput = 2;</code>
       */
      OdpsInput(2),
      /**
       * <pre>
       * odps input, used on pai
       * </pre>
       *
       * <code>OdpsInputV2 = 3;</code>
       */
      OdpsInputV2(3),
      /**
       * <code>RTPInput = 4;</code>
       */
      RTPInput(4),
      /**
       * <code>RTPInputV2 = 5;</code>
       */
      RTPInputV2(5),
      /**
       * <code>OdpsRTPInput = 6;</code>
       */
      OdpsRTPInput(6),
      /**
       * <code>TFRecordInput = 7;</code>
       */
      TFRecordInput(7),
      /**
       * <pre>
       * for the purpose to debug performance bottleneck of
       * input pipelines
       * </pre>
       *
       * <code>DummyInput = 8;</code>
       */
      DummyInput(8),
      /**
       * <code>KafkaInput = 9;</code>
       */
      KafkaInput(9),
      ;

      /**
       * <pre>
       * csv format input, could be used in local or hdfs
       * </pre>
       *
       * <code>CSVInput = 10;</code>
       */
      public static final int CSVInput_VALUE = 10;
      /**
       * <pre>
       * &#64;Depreciated
       * </pre>
       *
       * <code>CSVInputV2 = 11;</code>
       */
      public static final int CSVInputV2_VALUE = 11;
      /**
       * <pre>
       * extended csv format, allow quote in fields
       * </pre>
       *
       * <code>CSVInputEx = 12;</code>
       */
      public static final int CSVInputEx_VALUE = 12;
      /**
       * <pre>
       * &#64;Depreciated, has memory leak problem
       * </pre>
       *
       * <code>OdpsInput = 2;</code>
       */
      public static final int OdpsInput_VALUE = 2;
      /**
       * <pre>
       * odps input, used on pai
       * </pre>
       *
       * <code>OdpsInputV2 = 3;</code>
       */
      public static final int OdpsInputV2_VALUE = 3;
      /**
       * <code>RTPInput = 4;</code>
       */
      public static final int RTPInput_VALUE = 4;
      /**
       * <code>RTPInputV2 = 5;</code>
       */
      public static final int RTPInputV2_VALUE = 5;
      /**
       * <code>OdpsRTPInput = 6;</code>
       */
      public static final int OdpsRTPInput_VALUE = 6;
      /**
       * <code>TFRecordInput = 7;</code>
       */
      public static final int TFRecordInput_VALUE = 7;
      /**
       * <pre>
       * for the purpose to debug performance bottleneck of
       * input pipelines
       * </pre>
       *
       * <code>DummyInput = 8;</code>
       */
      public static final int DummyInput_VALUE = 8;
      /**
       * <code>KafkaInput = 9;</code>
       */
      public static final int KafkaInput_VALUE = 9;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static InputType valueOf(int value) {
        return forNumber(value);
      }

      public static InputType forNumber(int value) {
        switch (value) {
          case 10: return CSVInput;
          case 11: return CSVInputV2;
          case 12: return CSVInputEx;
          case 2: return OdpsInput;
          case 3: return OdpsInputV2;
          case 4: return RTPInput;
          case 5: return RTPInputV2;
          case 6: return OdpsRTPInput;
          case 7: return TFRecordInput;
          case 8: return DummyInput;
          case 9: return KafkaInput;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<InputType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          InputType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<InputType>() {
              public InputType findValueByNumber(int number) {
                return InputType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.getDescriptor().getEnumTypes().get(1);
      }

      private static final InputType[] VALUES = values();

      public static InputType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private InputType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protos.DatasetConfig.InputType)
    }

    public interface FieldOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protos.DatasetConfig.Field)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string input_name = 1;</code>
       */
      boolean hasInputName();
      /**
       * <code>required string input_name = 1;</code>
       */
      java.lang.String getInputName();
      /**
       * <code>required string input_name = 1;</code>
       */
      com.google.protobuf.ByteString
          getInputNameBytes();

      /**
       * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
       */
      boolean hasInputType();
      /**
       * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
       */
      com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType getInputType();

      /**
       * <code>optional string default_val = 3;</code>
       */
      boolean hasDefaultVal();
      /**
       * <code>optional string default_val = 3;</code>
       */
      java.lang.String getDefaultVal();
      /**
       * <code>optional string default_val = 3;</code>
       */
      com.google.protobuf.ByteString
          getDefaultValBytes();

      /**
       * <code>optional uint32 input_dim = 4 [default = 1];</code>
       */
      boolean hasInputDim();
      /**
       * <code>optional uint32 input_dim = 4 [default = 1];</code>
       */
      int getInputDim();
    }
    /**
     * Protobuf type {@code protos.DatasetConfig.Field}
     */
    public  static final class Field extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:protos.DatasetConfig.Field)
        FieldOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Field.newBuilder() to construct.
      private Field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Field() {
        inputName_ = "";
        inputType_ = 2;
        defaultVal_ = "";
        inputDim_ = 1;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Field();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Field(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                inputName_ = bs;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType value = com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  inputType_ = rawValue;
                }
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                defaultVal_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                inputDim_ = input.readUInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_Field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_Field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.class, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder.class);
      }

      private int bitField0_;
      public static final int INPUT_NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object inputName_;
      /**
       * <code>required string input_name = 1;</code>
       */
      public boolean hasInputName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string input_name = 1;</code>
       */
      public java.lang.String getInputName() {
        java.lang.Object ref = inputName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            inputName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string input_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getInputNameBytes() {
        java.lang.Object ref = inputName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inputName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INPUT_TYPE_FIELD_NUMBER = 2;
      private int inputType_;
      /**
       * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
       */
      public boolean hasInputType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
       */
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType getInputType() {
        @SuppressWarnings("deprecation")
        com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType result = com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType.valueOf(inputType_);
        return result == null ? com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType.STRING : result;
      }

      public static final int DEFAULT_VAL_FIELD_NUMBER = 3;
      private volatile java.lang.Object defaultVal_;
      /**
       * <code>optional string default_val = 3;</code>
       */
      public boolean hasDefaultVal() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string default_val = 3;</code>
       */
      public java.lang.String getDefaultVal() {
        java.lang.Object ref = defaultVal_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            defaultVal_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string default_val = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDefaultValBytes() {
        java.lang.Object ref = defaultVal_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defaultVal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INPUT_DIM_FIELD_NUMBER = 4;
      private int inputDim_;
      /**
       * <code>optional uint32 input_dim = 4 [default = 1];</code>
       */
      public boolean hasInputDim() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 input_dim = 4 [default = 1];</code>
       */
      public int getInputDim() {
        return inputDim_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasInputName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasInputType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, inputName_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeEnum(2, inputType_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, defaultVal_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, inputDim_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, inputName_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, inputType_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, defaultVal_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, inputDim_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field)) {
          return super.equals(obj);
        }
        com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field other = (com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field) obj;

        if (hasInputName() != other.hasInputName()) return false;
        if (hasInputName()) {
          if (!getInputName()
              .equals(other.getInputName())) return false;
        }
        if (hasInputType() != other.hasInputType()) return false;
        if (hasInputType()) {
          if (inputType_ != other.inputType_) return false;
        }
        if (hasDefaultVal() != other.hasDefaultVal()) return false;
        if (hasDefaultVal()) {
          if (!getDefaultVal()
              .equals(other.getDefaultVal())) return false;
        }
        if (hasInputDim() != other.hasInputDim()) return false;
        if (hasInputDim()) {
          if (getInputDim()
              != other.getInputDim()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasInputName()) {
          hash = (37 * hash) + INPUT_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getInputName().hashCode();
        }
        if (hasInputType()) {
          hash = (37 * hash) + INPUT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + inputType_;
        }
        if (hasDefaultVal()) {
          hash = (37 * hash) + DEFAULT_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getDefaultVal().hashCode();
        }
        if (hasInputDim()) {
          hash = (37 * hash) + INPUT_DIM_FIELD_NUMBER;
          hash = (53 * hash) + getInputDim();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protos.DatasetConfig.Field}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protos.DatasetConfig.Field)
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_Field_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_Field_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.class, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder.class);
        }

        // Construct using com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          inputName_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          inputType_ = 2;
          bitField0_ = (bitField0_ & ~0x00000002);
          defaultVal_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          inputDim_ = 1;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_Field_descriptor;
        }

        @java.lang.Override
        public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field getDefaultInstanceForType() {
          return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field build() {
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field buildPartial() {
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field result = new com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.inputName_ = inputName_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.inputType_ = inputType_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.defaultVal_ = defaultVal_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.inputDim_ = inputDim_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field) {
            return mergeFrom((com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field other) {
          if (other == com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.getDefaultInstance()) return this;
          if (other.hasInputName()) {
            bitField0_ |= 0x00000001;
            inputName_ = other.inputName_;
            onChanged();
          }
          if (other.hasInputType()) {
            setInputType(other.getInputType());
          }
          if (other.hasDefaultVal()) {
            bitField0_ |= 0x00000004;
            defaultVal_ = other.defaultVal_;
            onChanged();
          }
          if (other.hasInputDim()) {
            setInputDim(other.getInputDim());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasInputName()) {
            return false;
          }
          if (!hasInputType()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object inputName_ = "";
        /**
         * <code>required string input_name = 1;</code>
         */
        public boolean hasInputName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required string input_name = 1;</code>
         */
        public java.lang.String getInputName() {
          java.lang.Object ref = inputName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              inputName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string input_name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getInputNameBytes() {
          java.lang.Object ref = inputName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            inputName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string input_name = 1;</code>
         */
        public Builder setInputName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          inputName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string input_name = 1;</code>
         */
        public Builder clearInputName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          inputName_ = getDefaultInstance().getInputName();
          onChanged();
          return this;
        }
        /**
         * <code>required string input_name = 1;</code>
         */
        public Builder setInputNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          inputName_ = value;
          onChanged();
          return this;
        }

        private int inputType_ = 2;
        /**
         * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
         */
        public boolean hasInputType() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
         */
        public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType getInputType() {
          @SuppressWarnings("deprecation")
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType result = com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType.valueOf(inputType_);
          return result == null ? com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType.STRING : result;
        }
        /**
         * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
         */
        public Builder setInputType(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          inputType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>required .protos.DatasetConfig.FieldType input_type = 2 [default = STRING];</code>
         */
        public Builder clearInputType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          inputType_ = 2;
          onChanged();
          return this;
        }

        private java.lang.Object defaultVal_ = "";
        /**
         * <code>optional string default_val = 3;</code>
         */
        public boolean hasDefaultVal() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string default_val = 3;</code>
         */
        public java.lang.String getDefaultVal() {
          java.lang.Object ref = defaultVal_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              defaultVal_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string default_val = 3;</code>
         */
        public com.google.protobuf.ByteString
            getDefaultValBytes() {
          java.lang.Object ref = defaultVal_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            defaultVal_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string default_val = 3;</code>
         */
        public Builder setDefaultVal(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          defaultVal_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string default_val = 3;</code>
         */
        public Builder clearDefaultVal() {
          bitField0_ = (bitField0_ & ~0x00000004);
          defaultVal_ = getDefaultInstance().getDefaultVal();
          onChanged();
          return this;
        }
        /**
         * <code>optional string default_val = 3;</code>
         */
        public Builder setDefaultValBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          defaultVal_ = value;
          onChanged();
          return this;
        }

        private int inputDim_ = 1;
        /**
         * <code>optional uint32 input_dim = 4 [default = 1];</code>
         */
        public boolean hasInputDim() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 input_dim = 4 [default = 1];</code>
         */
        public int getInputDim() {
          return inputDim_;
        }
        /**
         * <code>optional uint32 input_dim = 4 [default = 1];</code>
         */
        public Builder setInputDim(int value) {
          bitField0_ |= 0x00000008;
          inputDim_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 input_dim = 4 [default = 1];</code>
         */
        public Builder clearInputDim() {
          bitField0_ = (bitField0_ & ~0x00000008);
          inputDim_ = 1;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:protos.DatasetConfig.Field)
      }

      // @@protoc_insertion_point(class_scope:protos.DatasetConfig.Field)
      private static final com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field();
      }

      public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Field>
          PARSER = new com.google.protobuf.AbstractParser<Field>() {
        @java.lang.Override
        public Field parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Field(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Field> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Field> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int BATCH_SIZE_FIELD_NUMBER = 1;
    private int batchSize_;
    /**
     * <pre>
     * mini batch size to use for training and evaluation.
     * </pre>
     *
     * <code>optional uint32 batch_size = 1 [default = 32];</code>
     */
    public boolean hasBatchSize() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * mini batch size to use for training and evaluation.
     * </pre>
     *
     * <code>optional uint32 batch_size = 1 [default = 32];</code>
     */
    public int getBatchSize() {
      return batchSize_;
    }

    public static final int AUTO_EXPAND_INPUT_FIELDS_FIELD_NUMBER = 3;
    private boolean autoExpandInputFields_;
    /**
     * <pre>
     * set auto_expand_input_fields to true to
     * auto_expand field[1-21] to field1, field2, ..., field21
     * </pre>
     *
     * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
     */
    public boolean hasAutoExpandInputFields() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * set auto_expand_input_fields to true to
     * auto_expand field[1-21] to field1, field2, ..., field21
     * </pre>
     *
     * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
     */
    public boolean getAutoExpandInputFields() {
      return autoExpandInputFields_;
    }

    public static final int LABEL_FIELDS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList labelFields_;
    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getLabelFieldsList() {
      return labelFields_;
    }
    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    public int getLabelFieldsCount() {
      return labelFields_.size();
    }
    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    public java.lang.String getLabelFields(int index) {
      return labelFields_.get(index);
    }
    /**
     * <pre>
     * label fields, normally only one field is used.
     * For multiple target models such as MMOE
     * multiple label_fields will be set.
     * </pre>
     *
     * <code>repeated string label_fields = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLabelFieldsBytes(int index) {
      return labelFields_.getByteString(index);
    }

    public static final int SHUFFLE_FIELD_NUMBER = 5;
    private boolean shuffle_;
    /**
     * <pre>
     * whether to shuffle data
     * </pre>
     *
     * <code>optional bool shuffle = 5 [default = true];</code>
     */
    public boolean hasShuffle() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * whether to shuffle data
     * </pre>
     *
     * <code>optional bool shuffle = 5 [default = true];</code>
     */
    public boolean getShuffle() {
      return shuffle_;
    }

    public static final int SHUFFLE_BUFFER_SIZE_FIELD_NUMBER = 11;
    private int shuffleBufferSize_;
    /**
     * <pre>
     * shufffle buffer for better performance, even shuffle buffer is set,
     * it is suggested to do full data shuffle before training
     * especially when the performance of models is not good.
     * </pre>
     *
     * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
     */
    public boolean hasShuffleBufferSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * shufffle buffer for better performance, even shuffle buffer is set,
     * it is suggested to do full data shuffle before training
     * especially when the performance of models is not good.
     * </pre>
     *
     * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
     */
    public int getShuffleBufferSize() {
      return shuffleBufferSize_;
    }

    public static final int NUM_EPOCHS_FIELD_NUMBER = 6;
    private int numEpochs_;
    /**
     * <pre>
     * The number of times a data source is read. If set to zero, the data source
     * will be reused indefinitely.
     * </pre>
     *
     * <code>optional uint32 num_epochs = 6 [default = 0];</code>
     */
    public boolean hasNumEpochs() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The number of times a data source is read. If set to zero, the data source
     * will be reused indefinitely.
     * </pre>
     *
     * <code>optional uint32 num_epochs = 6 [default = 0];</code>
     */
    public int getNumEpochs() {
      return numEpochs_;
    }

    public static final int PREFETCH_SIZE_FIELD_NUMBER = 7;
    private int prefetchSize_;
    /**
     * <pre>
     * Number of decoded records to prefetch before batching.
     * </pre>
     *
     * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
     */
    public boolean hasPrefetchSize() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Number of decoded records to prefetch before batching.
     * </pre>
     *
     * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
     */
    public int getPrefetchSize() {
      return prefetchSize_;
    }

    public static final int SHARD_FIELD_NUMBER = 8;
    private boolean shard_;
    /**
     * <pre>
     * shard dataset to 1/num_workers in distribute mode
     * </pre>
     *
     * <code>optional bool shard = 8 [default = false];</code>
     */
    public boolean hasShard() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * shard dataset to 1/num_workers in distribute mode
     * </pre>
     *
     * <code>optional bool shard = 8 [default = false];</code>
     */
    public boolean getShard() {
      return shard_;
    }

    public static final int INPUT_TYPE_FIELD_NUMBER = 10;
    private int inputType_;
    /**
     * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
     */
    public boolean hasInputType() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
     */
    public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType getInputType() {
      @SuppressWarnings("deprecation")
      com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType result = com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType.valueOf(inputType_);
      return result == null ? com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType.CSVInput : result;
    }

    public static final int SEPARATOR_FIELD_NUMBER = 12;
    private volatile java.lang.Object separator_;
    /**
     * <pre>
     * separator of column features, only used for CSVInput*
     * not used in OdpsInput*
     * binary separators are supported:
     *   CTRL+A could be set as '&#92;001'
     *   CTRL+B could be set as '&#92;002'
     *   CTRL+C could be set as '&#92;003'
     * for RTPInput and OdpsRTPInput it is usually set
     * to '&#92;002'
     * </pre>
     *
     * <code>optional string separator = 12 [default = ","];</code>
     */
    public boolean hasSeparator() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * separator of column features, only used for CSVInput*
     * not used in OdpsInput*
     * binary separators are supported:
     *   CTRL+A could be set as '&#92;001'
     *   CTRL+B could be set as '&#92;002'
     *   CTRL+C could be set as '&#92;003'
     * for RTPInput and OdpsRTPInput it is usually set
     * to '&#92;002'
     * </pre>
     *
     * <code>optional string separator = 12 [default = ","];</code>
     */
    public java.lang.String getSeparator() {
      java.lang.Object ref = separator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          separator_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * separator of column features, only used for CSVInput*
     * not used in OdpsInput*
     * binary separators are supported:
     *   CTRL+A could be set as '&#92;001'
     *   CTRL+B could be set as '&#92;002'
     *   CTRL+C could be set as '&#92;003'
     * for RTPInput and OdpsRTPInput it is usually set
     * to '&#92;002'
     * </pre>
     *
     * <code>optional string separator = 12 [default = ","];</code>
     */
    public com.google.protobuf.ByteString
        getSeparatorBytes() {
      java.lang.Object ref = separator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        separator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUM_PARALLEL_CALLS_FIELD_NUMBER = 13;
    private int numParallelCalls_;
    /**
     * <pre>
     * parallel preproces of raw data, avoid using too small
     * or too large numbers(suggested be to small than
     * number of the cores)
     * </pre>
     *
     * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
     */
    public boolean hasNumParallelCalls() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * parallel preproces of raw data, avoid using too small
     * or too large numbers(suggested be to small than
     * number of the cores)
     * </pre>
     *
     * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
     */
    public int getNumParallelCalls() {
      return numParallelCalls_;
    }

    public static final int SELECTED_COLS_FIELD_NUMBER = 14;
    private volatile java.lang.Object selectedCols_;
    /**
     * <pre>
     * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
     * for RTPInput, selected_cols use indices as column names
     *  such as '1,2,4', where 1,2 are label columns, and
     *  4 is the feature column, column 0,3 are not used,
     * </pre>
     *
     * <code>optional string selected_cols = 14 [default = ""];</code>
     */
    public boolean hasSelectedCols() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
     * for RTPInput, selected_cols use indices as column names
     *  such as '1,2,4', where 1,2 are label columns, and
     *  4 is the feature column, column 0,3 are not used,
     * </pre>
     *
     * <code>optional string selected_cols = 14 [default = ""];</code>
     */
    public java.lang.String getSelectedCols() {
      java.lang.Object ref = selectedCols_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          selectedCols_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
     * for RTPInput, selected_cols use indices as column names
     *  such as '1,2,4', where 1,2 are label columns, and
     *  4 is the feature column, column 0,3 are not used,
     * </pre>
     *
     * <code>optional string selected_cols = 14 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getSelectedColsBytes() {
      java.lang.Object ref = selectedCols_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        selectedCols_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SELECTED_COL_TYPES_FIELD_NUMBER = 15;
    private volatile java.lang.Object selectedColTypes_;
    /**
     * <pre>
     * selected col types, only used for OdpsInput/OdpsInputV2
     * to avoid error setting of data types
     * </pre>
     *
     * <code>optional string selected_col_types = 15 [default = ""];</code>
     */
    public boolean hasSelectedColTypes() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * selected col types, only used for OdpsInput/OdpsInputV2
     * to avoid error setting of data types
     * </pre>
     *
     * <code>optional string selected_col_types = 15 [default = ""];</code>
     */
    public java.lang.String getSelectedColTypes() {
      java.lang.Object ref = selectedColTypes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          selectedColTypes_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * selected col types, only used for OdpsInput/OdpsInputV2
     * to avoid error setting of data types
     * </pre>
     *
     * <code>optional string selected_col_types = 15 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getSelectedColTypesBytes() {
      java.lang.Object ref = selectedColTypes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        selectedColTypes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INPUT_FIELDS_FIELD_NUMBER = 16;
    private java.util.List<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field> inputFields_;
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    public java.util.List<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field> getInputFieldsList() {
      return inputFields_;
    }
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    public java.util.List<? extends com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder> 
        getInputFieldsOrBuilderList() {
      return inputFields_;
    }
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    public int getInputFieldsCount() {
      return inputFields_.size();
    }
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field getInputFields(int index) {
      return inputFields_.get(index);
    }
    /**
     * <pre>
     * the input fields must be the same number and in the
     * same order as data in csv files or odps tables
     * </pre>
     *
     * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
     */
    public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder getInputFieldsOrBuilder(
        int index) {
      return inputFields_.get(index);
    }

    public static final int RTP_SEPARATOR_FIELD_NUMBER = 17;
    private volatile java.lang.Object rtpSeparator_;
    /**
     * <pre>
     * for RTPInput only
     * </pre>
     *
     * <code>optional string rtp_separator = 17 [default = ";"];</code>
     */
    public boolean hasRtpSeparator() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * for RTPInput only
     * </pre>
     *
     * <code>optional string rtp_separator = 17 [default = ";"];</code>
     */
    public java.lang.String getRtpSeparator() {
      java.lang.Object ref = rtpSeparator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rtpSeparator_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * for RTPInput only
     * </pre>
     *
     * <code>optional string rtp_separator = 17 [default = ";"];</code>
     */
    public com.google.protobuf.ByteString
        getRtpSeparatorBytes() {
      java.lang.Object ref = rtpSeparator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rtpSeparator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IGNORE_ERROR_FIELD_NUMBER = 18;
    private boolean ignoreError_;
    /**
     * <pre>
     * ignore some data errors
     * it is not suggested to set this parameter
     * </pre>
     *
     * <code>optional bool ignore_error = 18 [default = false];</code>
     */
    public boolean hasIgnoreError() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * ignore some data errors
     * it is not suggested to set this parameter
     * </pre>
     *
     * <code>optional bool ignore_error = 18 [default = false];</code>
     */
    public boolean getIgnoreError() {
      return ignoreError_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasInputType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getInputFieldsCount(); i++) {
        if (!getInputFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, batchSize_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(3, autoExpandInputFields_);
      }
      for (int i = 0; i < labelFields_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, labelFields_.getRaw(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(5, shuffle_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(6, numEpochs_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(7, prefetchSize_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(8, shard_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeEnum(10, inputType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(11, shuffleBufferSize_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, separator_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(13, numParallelCalls_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, selectedCols_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, selectedColTypes_);
      }
      for (int i = 0; i < inputFields_.size(); i++) {
        output.writeMessage(16, inputFields_.get(i));
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, rtpSeparator_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeBool(18, ignoreError_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, batchSize_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, autoExpandInputFields_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < labelFields_.size(); i++) {
          dataSize += computeStringSizeNoTag(labelFields_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getLabelFieldsList().size();
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, shuffle_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, numEpochs_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, prefetchSize_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, shard_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, inputType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, shuffleBufferSize_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, separator_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, numParallelCalls_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, selectedCols_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, selectedColTypes_);
      }
      for (int i = 0; i < inputFields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, inputFields_.get(i));
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, rtpSeparator_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, ignoreError_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig)) {
        return super.equals(obj);
      }
      com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig other = (com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig) obj;

      if (hasBatchSize() != other.hasBatchSize()) return false;
      if (hasBatchSize()) {
        if (getBatchSize()
            != other.getBatchSize()) return false;
      }
      if (hasAutoExpandInputFields() != other.hasAutoExpandInputFields()) return false;
      if (hasAutoExpandInputFields()) {
        if (getAutoExpandInputFields()
            != other.getAutoExpandInputFields()) return false;
      }
      if (!getLabelFieldsList()
          .equals(other.getLabelFieldsList())) return false;
      if (hasShuffle() != other.hasShuffle()) return false;
      if (hasShuffle()) {
        if (getShuffle()
            != other.getShuffle()) return false;
      }
      if (hasShuffleBufferSize() != other.hasShuffleBufferSize()) return false;
      if (hasShuffleBufferSize()) {
        if (getShuffleBufferSize()
            != other.getShuffleBufferSize()) return false;
      }
      if (hasNumEpochs() != other.hasNumEpochs()) return false;
      if (hasNumEpochs()) {
        if (getNumEpochs()
            != other.getNumEpochs()) return false;
      }
      if (hasPrefetchSize() != other.hasPrefetchSize()) return false;
      if (hasPrefetchSize()) {
        if (getPrefetchSize()
            != other.getPrefetchSize()) return false;
      }
      if (hasShard() != other.hasShard()) return false;
      if (hasShard()) {
        if (getShard()
            != other.getShard()) return false;
      }
      if (hasInputType() != other.hasInputType()) return false;
      if (hasInputType()) {
        if (inputType_ != other.inputType_) return false;
      }
      if (hasSeparator() != other.hasSeparator()) return false;
      if (hasSeparator()) {
        if (!getSeparator()
            .equals(other.getSeparator())) return false;
      }
      if (hasNumParallelCalls() != other.hasNumParallelCalls()) return false;
      if (hasNumParallelCalls()) {
        if (getNumParallelCalls()
            != other.getNumParallelCalls()) return false;
      }
      if (hasSelectedCols() != other.hasSelectedCols()) return false;
      if (hasSelectedCols()) {
        if (!getSelectedCols()
            .equals(other.getSelectedCols())) return false;
      }
      if (hasSelectedColTypes() != other.hasSelectedColTypes()) return false;
      if (hasSelectedColTypes()) {
        if (!getSelectedColTypes()
            .equals(other.getSelectedColTypes())) return false;
      }
      if (!getInputFieldsList()
          .equals(other.getInputFieldsList())) return false;
      if (hasRtpSeparator() != other.hasRtpSeparator()) return false;
      if (hasRtpSeparator()) {
        if (!getRtpSeparator()
            .equals(other.getRtpSeparator())) return false;
      }
      if (hasIgnoreError() != other.hasIgnoreError()) return false;
      if (hasIgnoreError()) {
        if (getIgnoreError()
            != other.getIgnoreError()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBatchSize()) {
        hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBatchSize();
      }
      if (hasAutoExpandInputFields()) {
        hash = (37 * hash) + AUTO_EXPAND_INPUT_FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAutoExpandInputFields());
      }
      if (getLabelFieldsCount() > 0) {
        hash = (37 * hash) + LABEL_FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getLabelFieldsList().hashCode();
      }
      if (hasShuffle()) {
        hash = (37 * hash) + SHUFFLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShuffle());
      }
      if (hasShuffleBufferSize()) {
        hash = (37 * hash) + SHUFFLE_BUFFER_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getShuffleBufferSize();
      }
      if (hasNumEpochs()) {
        hash = (37 * hash) + NUM_EPOCHS_FIELD_NUMBER;
        hash = (53 * hash) + getNumEpochs();
      }
      if (hasPrefetchSize()) {
        hash = (37 * hash) + PREFETCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getPrefetchSize();
      }
      if (hasShard()) {
        hash = (37 * hash) + SHARD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShard());
      }
      if (hasInputType()) {
        hash = (37 * hash) + INPUT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + inputType_;
      }
      if (hasSeparator()) {
        hash = (37 * hash) + SEPARATOR_FIELD_NUMBER;
        hash = (53 * hash) + getSeparator().hashCode();
      }
      if (hasNumParallelCalls()) {
        hash = (37 * hash) + NUM_PARALLEL_CALLS_FIELD_NUMBER;
        hash = (53 * hash) + getNumParallelCalls();
      }
      if (hasSelectedCols()) {
        hash = (37 * hash) + SELECTED_COLS_FIELD_NUMBER;
        hash = (53 * hash) + getSelectedCols().hashCode();
      }
      if (hasSelectedColTypes()) {
        hash = (37 * hash) + SELECTED_COL_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getSelectedColTypes().hashCode();
      }
      if (getInputFieldsCount() > 0) {
        hash = (37 * hash) + INPUT_FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getInputFieldsList().hashCode();
      }
      if (hasRtpSeparator()) {
        hash = (37 * hash) + RTP_SEPARATOR_FIELD_NUMBER;
        hash = (53 * hash) + getRtpSeparator().hashCode();
      }
      if (hasIgnoreError()) {
        hash = (37 * hash) + IGNORE_ERROR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIgnoreError());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protos.DatasetConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protos.DatasetConfig)
        com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.class, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Builder.class);
      }

      // Construct using com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInputFieldsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        batchSize_ = 32;
        bitField0_ = (bitField0_ & ~0x00000001);
        autoExpandInputFields_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        labelFields_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        shuffle_ = true;
        bitField0_ = (bitField0_ & ~0x00000008);
        shuffleBufferSize_ = 32;
        bitField0_ = (bitField0_ & ~0x00000010);
        numEpochs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        prefetchSize_ = 512;
        bitField0_ = (bitField0_ & ~0x00000040);
        shard_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        inputType_ = 10;
        bitField0_ = (bitField0_ & ~0x00000100);
        separator_ = ",";
        bitField0_ = (bitField0_ & ~0x00000200);
        numParallelCalls_ = 8;
        bitField0_ = (bitField0_ & ~0x00000400);
        selectedCols_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        selectedColTypes_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        if (inputFieldsBuilder_ == null) {
          inputFields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          inputFieldsBuilder_.clear();
        }
        rtpSeparator_ = ";";
        bitField0_ = (bitField0_ & ~0x00004000);
        ignoreError_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.internal_static_protos_DatasetConfig_descriptor;
      }

      @java.lang.Override
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig getDefaultInstanceForType() {
        return com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig build() {
        com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig buildPartial() {
        com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig result = new com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.batchSize_ = batchSize_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.autoExpandInputFields_ = autoExpandInputFields_;
          to_bitField0_ |= 0x00000002;
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          labelFields_ = labelFields_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.labelFields_ = labelFields_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.shuffle_ = shuffle_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shuffleBufferSize_ = shuffleBufferSize_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.numEpochs_ = numEpochs_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.prefetchSize_ = prefetchSize_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.shard_ = shard_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          to_bitField0_ |= 0x00000080;
        }
        result.inputType_ = inputType_;
        if (((from_bitField0_ & 0x00000200) != 0)) {
          to_bitField0_ |= 0x00000100;
        }
        result.separator_ = separator_;
        if (((from_bitField0_ & 0x00000400) != 0)) {
          to_bitField0_ |= 0x00000200;
        }
        result.numParallelCalls_ = numParallelCalls_;
        if (((from_bitField0_ & 0x00000800) != 0)) {
          to_bitField0_ |= 0x00000400;
        }
        result.selectedCols_ = selectedCols_;
        if (((from_bitField0_ & 0x00001000) != 0)) {
          to_bitField0_ |= 0x00000800;
        }
        result.selectedColTypes_ = selectedColTypes_;
        if (inputFieldsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0)) {
            inputFields_ = java.util.Collections.unmodifiableList(inputFields_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.inputFields_ = inputFields_;
        } else {
          result.inputFields_ = inputFieldsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          to_bitField0_ |= 0x00001000;
        }
        result.rtpSeparator_ = rtpSeparator_;
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.ignoreError_ = ignoreError_;
          to_bitField0_ |= 0x00002000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig) {
          return mergeFrom((com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig other) {
        if (other == com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.getDefaultInstance()) return this;
        if (other.hasBatchSize()) {
          setBatchSize(other.getBatchSize());
        }
        if (other.hasAutoExpandInputFields()) {
          setAutoExpandInputFields(other.getAutoExpandInputFields());
        }
        if (!other.labelFields_.isEmpty()) {
          if (labelFields_.isEmpty()) {
            labelFields_ = other.labelFields_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLabelFieldsIsMutable();
            labelFields_.addAll(other.labelFields_);
          }
          onChanged();
        }
        if (other.hasShuffle()) {
          setShuffle(other.getShuffle());
        }
        if (other.hasShuffleBufferSize()) {
          setShuffleBufferSize(other.getShuffleBufferSize());
        }
        if (other.hasNumEpochs()) {
          setNumEpochs(other.getNumEpochs());
        }
        if (other.hasPrefetchSize()) {
          setPrefetchSize(other.getPrefetchSize());
        }
        if (other.hasShard()) {
          setShard(other.getShard());
        }
        if (other.hasInputType()) {
          setInputType(other.getInputType());
        }
        if (other.hasSeparator()) {
          bitField0_ |= 0x00000200;
          separator_ = other.separator_;
          onChanged();
        }
        if (other.hasNumParallelCalls()) {
          setNumParallelCalls(other.getNumParallelCalls());
        }
        if (other.hasSelectedCols()) {
          bitField0_ |= 0x00000800;
          selectedCols_ = other.selectedCols_;
          onChanged();
        }
        if (other.hasSelectedColTypes()) {
          bitField0_ |= 0x00001000;
          selectedColTypes_ = other.selectedColTypes_;
          onChanged();
        }
        if (inputFieldsBuilder_ == null) {
          if (!other.inputFields_.isEmpty()) {
            if (inputFields_.isEmpty()) {
              inputFields_ = other.inputFields_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureInputFieldsIsMutable();
              inputFields_.addAll(other.inputFields_);
            }
            onChanged();
          }
        } else {
          if (!other.inputFields_.isEmpty()) {
            if (inputFieldsBuilder_.isEmpty()) {
              inputFieldsBuilder_.dispose();
              inputFieldsBuilder_ = null;
              inputFields_ = other.inputFields_;
              bitField0_ = (bitField0_ & ~0x00002000);
              inputFieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputFieldsFieldBuilder() : null;
            } else {
              inputFieldsBuilder_.addAllMessages(other.inputFields_);
            }
          }
        }
        if (other.hasRtpSeparator()) {
          bitField0_ |= 0x00004000;
          rtpSeparator_ = other.rtpSeparator_;
          onChanged();
        }
        if (other.hasIgnoreError()) {
          setIgnoreError(other.getIgnoreError());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasInputType()) {
          return false;
        }
        for (int i = 0; i < getInputFieldsCount(); i++) {
          if (!getInputFields(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int batchSize_ = 32;
      /**
       * <pre>
       * mini batch size to use for training and evaluation.
       * </pre>
       *
       * <code>optional uint32 batch_size = 1 [default = 32];</code>
       */
      public boolean hasBatchSize() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * mini batch size to use for training and evaluation.
       * </pre>
       *
       * <code>optional uint32 batch_size = 1 [default = 32];</code>
       */
      public int getBatchSize() {
        return batchSize_;
      }
      /**
       * <pre>
       * mini batch size to use for training and evaluation.
       * </pre>
       *
       * <code>optional uint32 batch_size = 1 [default = 32];</code>
       */
      public Builder setBatchSize(int value) {
        bitField0_ |= 0x00000001;
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mini batch size to use for training and evaluation.
       * </pre>
       *
       * <code>optional uint32 batch_size = 1 [default = 32];</code>
       */
      public Builder clearBatchSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        batchSize_ = 32;
        onChanged();
        return this;
      }

      private boolean autoExpandInputFields_ ;
      /**
       * <pre>
       * set auto_expand_input_fields to true to
       * auto_expand field[1-21] to field1, field2, ..., field21
       * </pre>
       *
       * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
       */
      public boolean hasAutoExpandInputFields() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * set auto_expand_input_fields to true to
       * auto_expand field[1-21] to field1, field2, ..., field21
       * </pre>
       *
       * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
       */
      public boolean getAutoExpandInputFields() {
        return autoExpandInputFields_;
      }
      /**
       * <pre>
       * set auto_expand_input_fields to true to
       * auto_expand field[1-21] to field1, field2, ..., field21
       * </pre>
       *
       * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
       */
      public Builder setAutoExpandInputFields(boolean value) {
        bitField0_ |= 0x00000002;
        autoExpandInputFields_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * set auto_expand_input_fields to true to
       * auto_expand field[1-21] to field1, field2, ..., field21
       * </pre>
       *
       * <code>optional bool auto_expand_input_fields = 3 [default = false];</code>
       */
      public Builder clearAutoExpandInputFields() {
        bitField0_ = (bitField0_ & ~0x00000002);
        autoExpandInputFields_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList labelFields_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureLabelFieldsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          labelFields_ = new com.google.protobuf.LazyStringArrayList(labelFields_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getLabelFieldsList() {
        return labelFields_.getUnmodifiableView();
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public int getLabelFieldsCount() {
        return labelFields_.size();
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public java.lang.String getLabelFields(int index) {
        return labelFields_.get(index);
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLabelFieldsBytes(int index) {
        return labelFields_.getByteString(index);
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public Builder setLabelFields(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLabelFieldsIsMutable();
        labelFields_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public Builder addLabelFields(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLabelFieldsIsMutable();
        labelFields_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public Builder addAllLabelFields(
          java.lang.Iterable<java.lang.String> values) {
        ensureLabelFieldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, labelFields_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public Builder clearLabelFields() {
        labelFields_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * label fields, normally only one field is used.
       * For multiple target models such as MMOE
       * multiple label_fields will be set.
       * </pre>
       *
       * <code>repeated string label_fields = 4;</code>
       */
      public Builder addLabelFieldsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLabelFieldsIsMutable();
        labelFields_.add(value);
        onChanged();
        return this;
      }

      private boolean shuffle_ = true;
      /**
       * <pre>
       * whether to shuffle data
       * </pre>
       *
       * <code>optional bool shuffle = 5 [default = true];</code>
       */
      public boolean hasShuffle() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * whether to shuffle data
       * </pre>
       *
       * <code>optional bool shuffle = 5 [default = true];</code>
       */
      public boolean getShuffle() {
        return shuffle_;
      }
      /**
       * <pre>
       * whether to shuffle data
       * </pre>
       *
       * <code>optional bool shuffle = 5 [default = true];</code>
       */
      public Builder setShuffle(boolean value) {
        bitField0_ |= 0x00000008;
        shuffle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * whether to shuffle data
       * </pre>
       *
       * <code>optional bool shuffle = 5 [default = true];</code>
       */
      public Builder clearShuffle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shuffle_ = true;
        onChanged();
        return this;
      }

      private int shuffleBufferSize_ = 32;
      /**
       * <pre>
       * shufffle buffer for better performance, even shuffle buffer is set,
       * it is suggested to do full data shuffle before training
       * especially when the performance of models is not good.
       * </pre>
       *
       * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
       */
      public boolean hasShuffleBufferSize() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * shufffle buffer for better performance, even shuffle buffer is set,
       * it is suggested to do full data shuffle before training
       * especially when the performance of models is not good.
       * </pre>
       *
       * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
       */
      public int getShuffleBufferSize() {
        return shuffleBufferSize_;
      }
      /**
       * <pre>
       * shufffle buffer for better performance, even shuffle buffer is set,
       * it is suggested to do full data shuffle before training
       * especially when the performance of models is not good.
       * </pre>
       *
       * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
       */
      public Builder setShuffleBufferSize(int value) {
        bitField0_ |= 0x00000010;
        shuffleBufferSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shufffle buffer for better performance, even shuffle buffer is set,
       * it is suggested to do full data shuffle before training
       * especially when the performance of models is not good.
       * </pre>
       *
       * <code>optional int32 shuffle_buffer_size = 11 [default = 32];</code>
       */
      public Builder clearShuffleBufferSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        shuffleBufferSize_ = 32;
        onChanged();
        return this;
      }

      private int numEpochs_ ;
      /**
       * <pre>
       * The number of times a data source is read. If set to zero, the data source
       * will be reused indefinitely.
       * </pre>
       *
       * <code>optional uint32 num_epochs = 6 [default = 0];</code>
       */
      public boolean hasNumEpochs() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The number of times a data source is read. If set to zero, the data source
       * will be reused indefinitely.
       * </pre>
       *
       * <code>optional uint32 num_epochs = 6 [default = 0];</code>
       */
      public int getNumEpochs() {
        return numEpochs_;
      }
      /**
       * <pre>
       * The number of times a data source is read. If set to zero, the data source
       * will be reused indefinitely.
       * </pre>
       *
       * <code>optional uint32 num_epochs = 6 [default = 0];</code>
       */
      public Builder setNumEpochs(int value) {
        bitField0_ |= 0x00000020;
        numEpochs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of times a data source is read. If set to zero, the data source
       * will be reused indefinitely.
       * </pre>
       *
       * <code>optional uint32 num_epochs = 6 [default = 0];</code>
       */
      public Builder clearNumEpochs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        numEpochs_ = 0;
        onChanged();
        return this;
      }

      private int prefetchSize_ = 512;
      /**
       * <pre>
       * Number of decoded records to prefetch before batching.
       * </pre>
       *
       * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
       */
      public boolean hasPrefetchSize() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Number of decoded records to prefetch before batching.
       * </pre>
       *
       * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
       */
      public int getPrefetchSize() {
        return prefetchSize_;
      }
      /**
       * <pre>
       * Number of decoded records to prefetch before batching.
       * </pre>
       *
       * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
       */
      public Builder setPrefetchSize(int value) {
        bitField0_ |= 0x00000040;
        prefetchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of decoded records to prefetch before batching.
       * </pre>
       *
       * <code>optional uint32 prefetch_size = 7 [default = 512];</code>
       */
      public Builder clearPrefetchSize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        prefetchSize_ = 512;
        onChanged();
        return this;
      }

      private boolean shard_ ;
      /**
       * <pre>
       * shard dataset to 1/num_workers in distribute mode
       * </pre>
       *
       * <code>optional bool shard = 8 [default = false];</code>
       */
      public boolean hasShard() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * shard dataset to 1/num_workers in distribute mode
       * </pre>
       *
       * <code>optional bool shard = 8 [default = false];</code>
       */
      public boolean getShard() {
        return shard_;
      }
      /**
       * <pre>
       * shard dataset to 1/num_workers in distribute mode
       * </pre>
       *
       * <code>optional bool shard = 8 [default = false];</code>
       */
      public Builder setShard(boolean value) {
        bitField0_ |= 0x00000080;
        shard_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shard dataset to 1/num_workers in distribute mode
       * </pre>
       *
       * <code>optional bool shard = 8 [default = false];</code>
       */
      public Builder clearShard() {
        bitField0_ = (bitField0_ & ~0x00000080);
        shard_ = false;
        onChanged();
        return this;
      }

      private int inputType_ = 10;
      /**
       * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
       */
      public boolean hasInputType() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
       */
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType getInputType() {
        @SuppressWarnings("deprecation")
        com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType result = com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType.valueOf(inputType_);
        return result == null ? com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType.CSVInput : result;
      }
      /**
       * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
       */
      public Builder setInputType(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.InputType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        inputType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .protos.DatasetConfig.InputType input_type = 10;</code>
       */
      public Builder clearInputType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        inputType_ = 10;
        onChanged();
        return this;
      }

      private java.lang.Object separator_ = ",";
      /**
       * <pre>
       * separator of column features, only used for CSVInput*
       * not used in OdpsInput*
       * binary separators are supported:
       *   CTRL+A could be set as '&#92;001'
       *   CTRL+B could be set as '&#92;002'
       *   CTRL+C could be set as '&#92;003'
       * for RTPInput and OdpsRTPInput it is usually set
       * to '&#92;002'
       * </pre>
       *
       * <code>optional string separator = 12 [default = ","];</code>
       */
      public boolean hasSeparator() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * separator of column features, only used for CSVInput*
       * not used in OdpsInput*
       * binary separators are supported:
       *   CTRL+A could be set as '&#92;001'
       *   CTRL+B could be set as '&#92;002'
       *   CTRL+C could be set as '&#92;003'
       * for RTPInput and OdpsRTPInput it is usually set
       * to '&#92;002'
       * </pre>
       *
       * <code>optional string separator = 12 [default = ","];</code>
       */
      public java.lang.String getSeparator() {
        java.lang.Object ref = separator_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            separator_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * separator of column features, only used for CSVInput*
       * not used in OdpsInput*
       * binary separators are supported:
       *   CTRL+A could be set as '&#92;001'
       *   CTRL+B could be set as '&#92;002'
       *   CTRL+C could be set as '&#92;003'
       * for RTPInput and OdpsRTPInput it is usually set
       * to '&#92;002'
       * </pre>
       *
       * <code>optional string separator = 12 [default = ","];</code>
       */
      public com.google.protobuf.ByteString
          getSeparatorBytes() {
        java.lang.Object ref = separator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          separator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * separator of column features, only used for CSVInput*
       * not used in OdpsInput*
       * binary separators are supported:
       *   CTRL+A could be set as '&#92;001'
       *   CTRL+B could be set as '&#92;002'
       *   CTRL+C could be set as '&#92;003'
       * for RTPInput and OdpsRTPInput it is usually set
       * to '&#92;002'
       * </pre>
       *
       * <code>optional string separator = 12 [default = ","];</code>
       */
      public Builder setSeparator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        separator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * separator of column features, only used for CSVInput*
       * not used in OdpsInput*
       * binary separators are supported:
       *   CTRL+A could be set as '&#92;001'
       *   CTRL+B could be set as '&#92;002'
       *   CTRL+C could be set as '&#92;003'
       * for RTPInput and OdpsRTPInput it is usually set
       * to '&#92;002'
       * </pre>
       *
       * <code>optional string separator = 12 [default = ","];</code>
       */
      public Builder clearSeparator() {
        bitField0_ = (bitField0_ & ~0x00000200);
        separator_ = getDefaultInstance().getSeparator();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * separator of column features, only used for CSVInput*
       * not used in OdpsInput*
       * binary separators are supported:
       *   CTRL+A could be set as '&#92;001'
       *   CTRL+B could be set as '&#92;002'
       *   CTRL+C could be set as '&#92;003'
       * for RTPInput and OdpsRTPInput it is usually set
       * to '&#92;002'
       * </pre>
       *
       * <code>optional string separator = 12 [default = ","];</code>
       */
      public Builder setSeparatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        separator_ = value;
        onChanged();
        return this;
      }

      private int numParallelCalls_ = 8;
      /**
       * <pre>
       * parallel preproces of raw data, avoid using too small
       * or too large numbers(suggested be to small than
       * number of the cores)
       * </pre>
       *
       * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
       */
      public boolean hasNumParallelCalls() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * parallel preproces of raw data, avoid using too small
       * or too large numbers(suggested be to small than
       * number of the cores)
       * </pre>
       *
       * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
       */
      public int getNumParallelCalls() {
        return numParallelCalls_;
      }
      /**
       * <pre>
       * parallel preproces of raw data, avoid using too small
       * or too large numbers(suggested be to small than
       * number of the cores)
       * </pre>
       *
       * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
       */
      public Builder setNumParallelCalls(int value) {
        bitField0_ |= 0x00000400;
        numParallelCalls_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * parallel preproces of raw data, avoid using too small
       * or too large numbers(suggested be to small than
       * number of the cores)
       * </pre>
       *
       * <code>optional uint32 num_parallel_calls = 13 [default = 8];</code>
       */
      public Builder clearNumParallelCalls() {
        bitField0_ = (bitField0_ & ~0x00000400);
        numParallelCalls_ = 8;
        onChanged();
        return this;
      }

      private java.lang.Object selectedCols_ = "";
      /**
       * <pre>
       * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
       * for RTPInput, selected_cols use indices as column names
       *  such as '1,2,4', where 1,2 are label columns, and
       *  4 is the feature column, column 0,3 are not used,
       * </pre>
       *
       * <code>optional string selected_cols = 14 [default = ""];</code>
       */
      public boolean hasSelectedCols() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
       * for RTPInput, selected_cols use indices as column names
       *  such as '1,2,4', where 1,2 are label columns, and
       *  4 is the feature column, column 0,3 are not used,
       * </pre>
       *
       * <code>optional string selected_cols = 14 [default = ""];</code>
       */
      public java.lang.String getSelectedCols() {
        java.lang.Object ref = selectedCols_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            selectedCols_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
       * for RTPInput, selected_cols use indices as column names
       *  such as '1,2,4', where 1,2 are label columns, and
       *  4 is the feature column, column 0,3 are not used,
       * </pre>
       *
       * <code>optional string selected_cols = 14 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getSelectedColsBytes() {
        java.lang.Object ref = selectedCols_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          selectedCols_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
       * for RTPInput, selected_cols use indices as column names
       *  such as '1,2,4', where 1,2 are label columns, and
       *  4 is the feature column, column 0,3 are not used,
       * </pre>
       *
       * <code>optional string selected_cols = 14 [default = ""];</code>
       */
      public Builder setSelectedCols(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        selectedCols_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
       * for RTPInput, selected_cols use indices as column names
       *  such as '1,2,4', where 1,2 are label columns, and
       *  4 is the feature column, column 0,3 are not used,
       * </pre>
       *
       * <code>optional string selected_cols = 14 [default = ""];</code>
       */
      public Builder clearSelectedCols() {
        bitField0_ = (bitField0_ & ~0x00000800);
        selectedCols_ = getDefaultInstance().getSelectedCols();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * only used for OdpsInput/OdpsInputV2/OdpsRTPInput, comma separated
       * for RTPInput, selected_cols use indices as column names
       *  such as '1,2,4', where 1,2 are label columns, and
       *  4 is the feature column, column 0,3 are not used,
       * </pre>
       *
       * <code>optional string selected_cols = 14 [default = ""];</code>
       */
      public Builder setSelectedColsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        selectedCols_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object selectedColTypes_ = "";
      /**
       * <pre>
       * selected col types, only used for OdpsInput/OdpsInputV2
       * to avoid error setting of data types
       * </pre>
       *
       * <code>optional string selected_col_types = 15 [default = ""];</code>
       */
      public boolean hasSelectedColTypes() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * selected col types, only used for OdpsInput/OdpsInputV2
       * to avoid error setting of data types
       * </pre>
       *
       * <code>optional string selected_col_types = 15 [default = ""];</code>
       */
      public java.lang.String getSelectedColTypes() {
        java.lang.Object ref = selectedColTypes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            selectedColTypes_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * selected col types, only used for OdpsInput/OdpsInputV2
       * to avoid error setting of data types
       * </pre>
       *
       * <code>optional string selected_col_types = 15 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getSelectedColTypesBytes() {
        java.lang.Object ref = selectedColTypes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          selectedColTypes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * selected col types, only used for OdpsInput/OdpsInputV2
       * to avoid error setting of data types
       * </pre>
       *
       * <code>optional string selected_col_types = 15 [default = ""];</code>
       */
      public Builder setSelectedColTypes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        selectedColTypes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * selected col types, only used for OdpsInput/OdpsInputV2
       * to avoid error setting of data types
       * </pre>
       *
       * <code>optional string selected_col_types = 15 [default = ""];</code>
       */
      public Builder clearSelectedColTypes() {
        bitField0_ = (bitField0_ & ~0x00001000);
        selectedColTypes_ = getDefaultInstance().getSelectedColTypes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * selected col types, only used for OdpsInput/OdpsInputV2
       * to avoid error setting of data types
       * </pre>
       *
       * <code>optional string selected_col_types = 15 [default = ""];</code>
       */
      public Builder setSelectedColTypesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        selectedColTypes_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field> inputFields_ =
        java.util.Collections.emptyList();
      private void ensureInputFieldsIsMutable() {
        if (!((bitField0_ & 0x00002000) != 0)) {
          inputFields_ = new java.util.ArrayList<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field>(inputFields_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder> inputFieldsBuilder_;

      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public java.util.List<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field> getInputFieldsList() {
        if (inputFieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputFields_);
        } else {
          return inputFieldsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public int getInputFieldsCount() {
        if (inputFieldsBuilder_ == null) {
          return inputFields_.size();
        } else {
          return inputFieldsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field getInputFields(int index) {
        if (inputFieldsBuilder_ == null) {
          return inputFields_.get(index);
        } else {
          return inputFieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder setInputFields(
          int index, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field value) {
        if (inputFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputFieldsIsMutable();
          inputFields_.set(index, value);
          onChanged();
        } else {
          inputFieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder setInputFields(
          int index, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder builderForValue) {
        if (inputFieldsBuilder_ == null) {
          ensureInputFieldsIsMutable();
          inputFields_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputFieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder addInputFields(com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field value) {
        if (inputFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputFieldsIsMutable();
          inputFields_.add(value);
          onChanged();
        } else {
          inputFieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder addInputFields(
          int index, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field value) {
        if (inputFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputFieldsIsMutable();
          inputFields_.add(index, value);
          onChanged();
        } else {
          inputFieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder addInputFields(
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder builderForValue) {
        if (inputFieldsBuilder_ == null) {
          ensureInputFieldsIsMutable();
          inputFields_.add(builderForValue.build());
          onChanged();
        } else {
          inputFieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder addInputFields(
          int index, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder builderForValue) {
        if (inputFieldsBuilder_ == null) {
          ensureInputFieldsIsMutable();
          inputFields_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputFieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder addAllInputFields(
          java.lang.Iterable<? extends com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field> values) {
        if (inputFieldsBuilder_ == null) {
          ensureInputFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputFields_);
          onChanged();
        } else {
          inputFieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder clearInputFields() {
        if (inputFieldsBuilder_ == null) {
          inputFields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          inputFieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public Builder removeInputFields(int index) {
        if (inputFieldsBuilder_ == null) {
          ensureInputFieldsIsMutable();
          inputFields_.remove(index);
          onChanged();
        } else {
          inputFieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder getInputFieldsBuilder(
          int index) {
        return getInputFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder getInputFieldsOrBuilder(
          int index) {
        if (inputFieldsBuilder_ == null) {
          return inputFields_.get(index);  } else {
          return inputFieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public java.util.List<? extends com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder> 
           getInputFieldsOrBuilderList() {
        if (inputFieldsBuilder_ != null) {
          return inputFieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputFields_);
        }
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder addInputFieldsBuilder() {
        return getInputFieldsFieldBuilder().addBuilder(
            com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.getDefaultInstance());
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder addInputFieldsBuilder(
          int index) {
        return getInputFieldsFieldBuilder().addBuilder(
            index, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.getDefaultInstance());
      }
      /**
       * <pre>
       * the input fields must be the same number and in the
       * same order as data in csv files or odps tables
       * </pre>
       *
       * <code>repeated .protos.DatasetConfig.Field input_fields = 16;</code>
       */
      public java.util.List<com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder> 
           getInputFieldsBuilderList() {
        return getInputFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder> 
          getInputFieldsFieldBuilder() {
        if (inputFieldsBuilder_ == null) {
          inputFieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.Field.Builder, com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig.FieldOrBuilder>(
                  inputFields_,
                  ((bitField0_ & 0x00002000) != 0),
                  getParentForChildren(),
                  isClean());
          inputFields_ = null;
        }
        return inputFieldsBuilder_;
      }

      private java.lang.Object rtpSeparator_ = ";";
      /**
       * <pre>
       * for RTPInput only
       * </pre>
       *
       * <code>optional string rtp_separator = 17 [default = ";"];</code>
       */
      public boolean hasRtpSeparator() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * for RTPInput only
       * </pre>
       *
       * <code>optional string rtp_separator = 17 [default = ";"];</code>
       */
      public java.lang.String getRtpSeparator() {
        java.lang.Object ref = rtpSeparator_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            rtpSeparator_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * for RTPInput only
       * </pre>
       *
       * <code>optional string rtp_separator = 17 [default = ";"];</code>
       */
      public com.google.protobuf.ByteString
          getRtpSeparatorBytes() {
        java.lang.Object ref = rtpSeparator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rtpSeparator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * for RTPInput only
       * </pre>
       *
       * <code>optional string rtp_separator = 17 [default = ";"];</code>
       */
      public Builder setRtpSeparator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        rtpSeparator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * for RTPInput only
       * </pre>
       *
       * <code>optional string rtp_separator = 17 [default = ";"];</code>
       */
      public Builder clearRtpSeparator() {
        bitField0_ = (bitField0_ & ~0x00004000);
        rtpSeparator_ = getDefaultInstance().getRtpSeparator();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * for RTPInput only
       * </pre>
       *
       * <code>optional string rtp_separator = 17 [default = ";"];</code>
       */
      public Builder setRtpSeparatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        rtpSeparator_ = value;
        onChanged();
        return this;
      }

      private boolean ignoreError_ ;
      /**
       * <pre>
       * ignore some data errors
       * it is not suggested to set this parameter
       * </pre>
       *
       * <code>optional bool ignore_error = 18 [default = false];</code>
       */
      public boolean hasIgnoreError() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * ignore some data errors
       * it is not suggested to set this parameter
       * </pre>
       *
       * <code>optional bool ignore_error = 18 [default = false];</code>
       */
      public boolean getIgnoreError() {
        return ignoreError_;
      }
      /**
       * <pre>
       * ignore some data errors
       * it is not suggested to set this parameter
       * </pre>
       *
       * <code>optional bool ignore_error = 18 [default = false];</code>
       */
      public Builder setIgnoreError(boolean value) {
        bitField0_ |= 0x00008000;
        ignoreError_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ignore some data errors
       * it is not suggested to set this parameter
       * </pre>
       *
       * <code>optional bool ignore_error = 18 [default = false];</code>
       */
      public Builder clearIgnoreError() {
        bitField0_ = (bitField0_ & ~0x00008000);
        ignoreError_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protos.DatasetConfig)
    }

    // @@protoc_insertion_point(class_scope:protos.DatasetConfig)
    private static final com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig();
    }

    public static com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DatasetConfig>
        PARSER = new com.google.protobuf.AbstractParser<DatasetConfig>() {
      @java.lang.Override
      public DatasetConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DatasetConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DatasetConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DatasetConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.alink.operator.batch.dl.ctr.protos.Dataset.DatasetConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protos_DatasetConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protos_DatasetConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protos_DatasetConfig_Field_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protos_DatasetConfig_Field_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$easy_rec/python/protos/dataset.proto\022\006" +
      "protos\"\207\007\n\rDatasetConfig\022\026\n\nbatch_size\030\001" +
      " \001(\r:\00232\022\'\n\030auto_expand_input_fields\030\003 \001" +
      "(\010:\005false\022\024\n\014label_fields\030\004 \003(\t\022\025\n\007shuff" +
      "le\030\005 \001(\010:\004true\022\037\n\023shuffle_buffer_size\030\013 " +
      "\001(\005:\00232\022\025\n\nnum_epochs\030\006 \001(\r:\0010\022\032\n\rprefet" +
      "ch_size\030\007 \001(\r:\003512\022\024\n\005shard\030\010 \001(\010:\005false" +
      "\0223\n\ninput_type\030\n \002(\0162\037.protos.DatasetCon" +
      "fig.InputType\022\024\n\tseparator\030\014 \001(\t:\001,\022\035\n\022n" +
      "um_parallel_calls\030\r \001(\r:\0018\022\027\n\rselected_c" +
      "ols\030\016 \001(\t:\000\022\034\n\022selected_col_types\030\017 \001(\t:" +
      "\000\0221\n\014input_fields\030\020 \003(\0132\033.protos.Dataset" +
      "Config.Field\022\030\n\rrtp_separator\030\021 \001(\t:\001;\022\033" +
      "\n\014ignore_error\030\022 \001(\010:\005false\032\203\001\n\005Field\022\022\n" +
      "\ninput_name\030\001 \002(\t\022;\n\ninput_type\030\002 \002(\0162\037." +
      "protos.DatasetConfig.FieldType:\006STRING\022\023" +
      "\n\013default_val\030\003 \001(\t\022\024\n\tinput_dim\030\004 \001(\r:\001" +
      "1\"N\n\tFieldType\022\t\n\005INT32\020\000\022\t\n\005INT64\020\001\022\n\n\006" +
      "STRING\020\002\022\t\n\005FLOAT\020\004\022\n\n\006DOUBLE\020\005\022\010\n\004BOOL\020" +
      "\006\"\274\001\n\tInputType\022\014\n\010CSVInput\020\n\022\016\n\nCSVInpu" +
      "tV2\020\013\022\016\n\nCSVInputEx\020\014\022\r\n\tOdpsInput\020\002\022\017\n\013" +
      "OdpsInputV2\020\003\022\014\n\010RTPInput\020\004\022\016\n\nRTPInputV" +
      "2\020\005\022\020\n\014OdpsRTPInput\020\006\022\021\n\rTFRecordInput\020\007" +
      "\022\016\n\nDummyInput\020\010\022\016\n\nKafkaInput\020\tB0\n.com." +
      "alibaba.alink.operator.batch.dl.ctr.prot" +
      "os"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_protos_DatasetConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protos_DatasetConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protos_DatasetConfig_descriptor,
        new java.lang.String[] { "BatchSize", "AutoExpandInputFields", "LabelFields", "Shuffle", "ShuffleBufferSize", "NumEpochs", "PrefetchSize", "Shard", "InputType", "Separator", "NumParallelCalls", "SelectedCols", "SelectedColTypes", "InputFields", "RtpSeparator", "IgnoreError", });
    internal_static_protos_DatasetConfig_Field_descriptor =
      internal_static_protos_DatasetConfig_descriptor.getNestedTypes().get(0);
    internal_static_protos_DatasetConfig_Field_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protos_DatasetConfig_Field_descriptor,
        new java.lang.String[] { "InputName", "InputType", "DefaultVal", "InputDim", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
